#include <iostream>
#include <cstring>
using namespace std;

const int MAX_ATLETAS = 10;
const int MAX_RONDAS = 2;

struct Atleta {
    string nombre;
    int numero;
};

struct RegistroTiempo {
    int tiempo;
    RegistroTiempo* sig;
};

struct AtletaPromedio {
    Atleta atleta;
    float promedio;
};

struct Nodo {
    AtletaPromedio dato;
    Nodo* sig;
};

void agregarAtleta(Atleta atletas[], int& cantAtletas);
void agregarTiempo(RegistroTiempo* &inicio, int tiempo);
float calcularPromedio(RegistroTiempo* inicio);
void agregarAtletaPromedio(Nodo* &lifo, Atleta atleta, float promedio);
void ordenarLifo(Nodo* &lifo);

int main() {
    Atleta atletas[MAX_ATLETAS];
    int cantAtletas = 0;

    RegistroTiempo* inicioTiempo = NULL;
    Nodo* lifo = NULL;

    int opcion;
    do {
        cout << "\n--- MENU PRINCIPAL ---" << endl;
        cout << "1. Agregar atleta" << endl;
        cout << "2. Agregar tiempo de atleta" << endl;
        cout << "3. Mostrar tiempos de atletas" << endl;
        cout << "4. Mostrar atletas con promedios ordenados" << endl;
        cout << "5. Salir" << endl;
        cout << "Ingrese una opcion: ";
        cin >> opcion;

        switch(opcion) {
            case 1:
                agregarAtleta(atletas, cantAtletas);
                break;
            case 2:
                if(cantAtletas == 0) {
                    cout << "Debe agregar al menos un atleta antes de registrar tiempos." << endl;
                }
                else {
                    int numAtleta;
                    cout << "Ingrese el numero del atleta (1-" << cantAtletas << "): ";
                    cin >> numAtleta;
                    if(numAtleta < 1 || numAtleta > cantAtletas) {
                        cout << "Numero de atleta invalido." << endl;
                    }
                    else {
                        int tiempo;
                        cout << "Ingrese el tiempo (segundos): ";
                        cin >> tiempo;
                        agregarTiempo(atletas[numAtleta - 1].tiempos, tiempo);
                    }
                }
                break;
            case 3:
                if(cantAtletas == 0) {
                    cout << "No hay atletas registrados." << endl;
                }
                else {
                    cout << "\n--- TIEMPOS DE ATLETAS ---" << endl;
                    for(int i = 0; i < cantAtletas; i++) {
                        cout << atletas[i].nombre << " (numero " << atletas[i].numero << "):" << endl;
                        RegistroTiempo* actual = atletas[i].tiempos;
                        while(actual != NULL) {
                            cout << "  " << actual->tiempo << " segundos" << endl;
                            actual = actual->sig;
                        }
                    }
                }
                break;
            case 4:
                if(cantAtletas == 0) {
                    cout << "No hay atletas registrados." << endl;
                }
                else {
                    Nodo* actual = lifo;
                    cout << "\n--- ATLETAS CON PROMEDIOS ORDENADOS ---" << endl
                while(actual != NULL) {
                    cout << actual->dato.atleta.nombre << " (numero " << actual->dato.atleta.numero << "): " << actual->dato.promedio << " segundos" << endl;
                    actual = actual->sig;
                }
            }
            break;
        case 5:
            cout << "Saliendo del programa..." << endl;
            break;
        default:
            cout << "Opcion invalida. Intente de nuevo." << endl;
            break;
    }
} while(opcion != 5);

return 0;
